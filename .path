# shellcheck shell=bash

# Enable xtrace if the DEBUG environment variable is set
if [[ ${DEBUG-} =~ ^1|yes|true$ ]]; then
    set -o xtrace       # Trace the execution of the script (debug)
fi

set -o errexit      # Exit on most errors (see the manual)
set -o nounset      # Disallow expansion of unset variables
set -o pipefail     # Use last non-zero exit code in a pipeline

main() {
  # Split the path into an array
  IFS=: read -ra PATH_ARRAY <<<"$PATH"

  # Add homebrew sbin/bin to the path
  if command -v brew &>/dev/null ; then
    HOMEBREW_PREFIX="$(brew --prefix)"
    add_to_path_array "$HOMEBREW_PREFIX"/bin
    add_to_path_array "$HOMEBREW_PREFIX"/sbin
  fi

  # Add go bin to the path
  add_to_path_array "$GOPATH/bin"

  # Add `~/bin` to the `$PATH`
  add_to_path_array "$HOME/bin"

  # add default pipx binary location to path
  add_to_path_array "$HOME/.local/bin"

  # Add nodenv to the path
  # add_to_path_array "$HOME/.nodenv/bin"

  #Â add php composer bin to path
  # add_to_path_array "$HOME/.composer/vendor/bin"

  if [[ -d /opt/homebrew/opt/postgresql@${PG_VERSION:-}/bin ]] ; then
    add_to_path_array /opt/homebrew/opt/postgresql@"$PG_VERSION"/bin
  fi

  if [[ -d "$HOME/.cargo/bin" ]] ; then
    add_to_path_array "$HOME/.cargo/bin"
  fi

  # load any local path changes
  [[ -r .path.local ]] && . .path.local

  unset add_to_path_array

  # Convert PATH_ARRAY back to a PATH string
  PATH=$(IFS=: ; echo "${PATH_ARRAY[*]}")
}

add_to_path_array() {
    local dir="$1"
    local pos=${2:-}

    # strip any occurence of $dir from $PATH_ARRAY
    for i in "${!PATH_ARRAY[@]}"; do
      if [[ ${PATH_ARRAY[i]} = "$dir" ]]; then
        unset 'PATH_ARRAY[i]'
      fi
    done

    # Add the new dir to PATH_ARRAY in the desired position
    if [[ "$pos" == "after" ]] ; then
      PATH_ARRAY=("${PATH_ARRAY[@]}" "$dir")
    else
      PATH_ARRAY=("$dir" "${PATH_ARRAY[@]}")
    fi
}

# invoke main, even if sourced
main "$@"
